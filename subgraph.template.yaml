specVersion: 0.0.2
description: Olta Editions Subgraph
repository: olta-art/editions-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: DutchAuctionDrop
    network: {{ network }}
    source:
      address: "{{ dutchAuctionDropAddress }}"
      abi: DutchAuctionDrop
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - DutchAuctionDrop
        - Purchase
      abis:
        - name: DutchAuctionDrop
          file: ./deployments/localhost/DutchAuctionDrop.json
        - name: ERC20
          file: ./abis/ERC20/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20/ERC20NameBytes.json
      eventHandlers:
        - event: AuctionCreated(uint256,address,(address,uint8),uint256,uint256,uint256,uint256,uint8,address,uint256,address)
          handler: handleAuctionCreated
        - event: EditionPurchased(uint256,address,uint256,uint256,address)
          handler: handleStandardEditionPurchased
        - event: SeededEditionPurchased(uint256,address,uint256,uint256,uint256,address)
          handler: handleSeededEditionPurchased
        - event: AuctionApprovalUpdated(uint256,address,bool)
          handler: handleAuctionApprovalUpdated
        - event: AuctionCanceled(uint256,address)
          handler: handleAuctionCanceled
        - event: AuctionEnded(uint256,address)
          handler: handleAuctionEnded
      file: ./src/dutchAuctionDrop.ts
  - kind: ethereum/contract
    name: ProjectCreator
    network: {{ network }}
    source:
      address: "{{ projectCreatorAddress }}"
      abi: ProjectCreator
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/projectCreator.ts
      abis:
        - name: ProjectCreator
          file: ./deployments/localhost/ProjectCreator.json
      entities:
        - ProjectCreator
      eventHandlers:
        - event: CreatedProject(indexed uint256,indexed address,uint256,address,uint8)
          handler: handleCreatedProject
        - event: CreatorApprovalsUpdated((address,bool)[])
          handler: handleCreatorApprovalsUpdated
  - kind: ethereum/contract
    name: Profiles
    network: {{ network }}
    source:
      address: "{{ profilesAddress }}"
      abi: Profiles
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/profiles.ts
      abis:
        - name: Profiles
          file: ./deployments/localhost/Profiles.json
      entities:
        - Profile
      eventHandlers:
        - event: Updated(address,(string,string,string,string))
          handler: handleProfileUpdated
  - kind: ethereum/contract
    name: AsksV1_1
    network: {{ network }}
    source:
      address: "{{ zoraAsksAddress }}"
      abi: AsksV1_1
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/zoraAsks.ts
      abis:
        - name: AsksV1_1
          file: ./abis/Zora/AsksV1_1.json
        - name: ERC20
          file: ./abis/ERC20/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20/ERC20NameBytes.json
      entities:
        - Ask
        - Transfer
        - Currency
      eventHandlers:
        - event: AskCreated(indexed address,indexed uint256,(address,address,address,uint16,uint256))
          handler: handleAskCreated
        - event: AskPriceUpdated(indexed address,indexed uint256,(address,address,address,uint16,uint256))
          handler: handleAskPriceUpdated
        - event: AskCanceled(indexed address,indexed uint256,(address,address,address,uint16,uint256))
          handler: handleAskCanceled
        - event: AskFilled(indexed address,indexed uint256,indexed address,address,(address,address,address,uint16,uint256))
          handler: handleAskFilled
templates:
  - name: StandardProject
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: StandardProject
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Project
        - ProjectMinterApproval
        - Edition
        - Version
        - UrlHashPair
        - UrlUpdate
      abis:
        - name: StandardProject
          file: ./deployments/localhost/StandardProject.json
        - name: SplitMain
          file: ./abis/0xSplits/SplitMain.json
        - name: SplitWallet
          file: ./abis/0xSplits/SplitWallet.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: VersionAdded(uint8[3])
          handler: handleVersionAdded
        - event: VersionURLUpdated(uint8[3],uint8,string)
          handler: handleVersionURLUpdated
        - event: ApprovedMinter(indexed address,indexed address,bool)
          handler: handleApprovedMinter
        - event: RoyaltyFundsRecipientChanged(address)
          handler: handleRoyaltyFundsRecipientChanged
        # TODO: set price sale eth
        # TODO: other erc-721 events
      file: ./src/standardProject.ts
  - name: SeededProject
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: SeededProject
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Project
        - ProjectMinterApproval
        - Edition
        - Version
        - UrlHashPair
        - UrlUpdate
      abis:
        - name: SeededProject
          file: ./deployments/localhost/SeededProject.json
        - name: SplitMain
          file: ./abis/0xSplits/SplitMain.json
        - name: SplitWallet
          file: ./abis/0xSplits/SplitWallet.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: VersionAdded(uint8[3])
          handler: handleVersionAdded
        - event: VersionURLUpdated(uint8[3],uint8,string)
          handler: handleVersionURLUpdated
        - event: ApprovedMinter(indexed address,indexed address,bool)
          handler: handleApprovedMinter
        - event: RoyaltyFundsRecipientChanged(address)
          handler: handleRoyaltyFundsRecipientChanged
        # TODO: set price sale eth
        # TODO: other erc-721 events
      file: ./src/seededProject.ts